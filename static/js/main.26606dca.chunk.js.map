{"version":3,"sources":["components/SearchBar.js","components/Marker.js","components/MarkDisplayer.js","actions/types.js","store.js","reducers/index.js","models/data.models.js","components/MapCanvas.js","actions/map.js","App.js","index.js"],"names":["SearchBar","props","onPlaceChanged","map","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","bind","this","mapApi","options","types","places","Autocomplete","addListener","bindTo","event","clearInstanceListeners","value","className","ref","type","onFocus","placeholder","Component","Marker","lat","lng","MarkDisplayer","name","address","data-testid","STORE_MARKER","middleware","thunk","store","createStore","state","arr","action","payload","composeWithDevTools","applyMiddleware","stateModel","mapApiLoaded","mapInstance","geoCoder","center","marginBounds","zoom","draggable","MapCanvas","useState","setState","trigger","setTrigger","marker","setMarker","footerData","setFooterData","storeArr","setStoreArr","dispatch","useDispatch","useEffect","navigator","geolocation","getCurrentPosition","position","prevState","coords","latitude","longitude","Geocoder","geocode","results","status","formatted_address","window","alert","Promise","resolve","storeMarker","getState","onChange","defaultCenter","bootstrapURLKeys","key","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","apiHasLoaded","length","mark","index","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26606dca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearSearchBox = this.clearSearchBox.bind(this);\r\n    }\r\n\r\n    componentDidMount({ map, mapApi } = this.props) {\r\n        const options = {\r\n            types: ['establishment'], // Especificado segun el ejemplo que muestra 'La Maquinista'\r\n        };\r\n        this.autoComplete = new mapApi.places.Autocomplete(\r\n            this.searchInput,\r\n            options,\r\n        );\r\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\r\n        this.autoComplete.bindTo('bounds', map);\r\n    }\r\n\r\n    componentWillUnmount({ mapApi } = this.props) {\r\n        mapApi.event.clearInstanceListeners(this.searchInput);\r\n    }\r\n\r\n    onPlaceChanged = ({ map, addplace } = this.props) => {\r\n        const place = this.autoComplete.getPlace();\r\n\r\n        if (!place.geometry) return;\r\n        if (place.geometry.viewport) {\r\n            map.fitBounds(place.geometry.viewport);\r\n        } else {\r\n            map.setCenter(place.geometry.location);\r\n            map.setZoom(17);\r\n        }\r\n\r\n        addplace(place);\r\n        this.searchInput.blur();\r\n    };\r\n\r\n    clearSearchBox() {\r\n        this.searchInput.value = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar-wrapper\">\r\n                <input\r\n                    className=\"search-input\"\r\n                    ref={(ref) => {\r\n                        this.searchInput = ref;\r\n                    }}\r\n                    type=\"text\"\r\n                    onFocus={this.clearSearchBox}\r\n                    placeholder=\"Search places...\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Marker = ({lat, lng}) => (\r\n    <div className=\"Marker-wrapper\"\r\n        lat={lat}\r\n        lng={lng}\r\n    />\r\n);\r\n\r\nexport default Marker;","import React from 'react';\r\n\r\nfunction MarkDisplayer(props) {\r\n    const { name, address } = props;\r\n    return (\r\n        <div className=\"info-wrapper\">\r\n            <div className=\"map-details\"><span data-testid=\"map-name\">{name}</span></div>\r\n            <div className=\"map-subdetails\"><span >{address}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarkDisplayer;","export const STORE_MARKER = \"STORE_MARKER\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n\r\n);\r\n\r\nexport default store;","import { STORE_MARKER } from '../actions/types';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = { arr: [] }, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case STORE_MARKER:\r\n            const { lat, lng, places } = payload;\r\n            return {\r\n                arr: [...state.arr, {\r\n                    lat: lat,\r\n                    lng: lng,\r\n                    places: places\r\n                }]\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const stateModel = {\r\n    mapApiLoaded: false,\r\n    mapInstance: null,\r\n    mapApi: null,\r\n    geoCoder: null,\r\n    places: [],\r\n    center: [],\r\n    marginBounds : [],\r\n    zoom: 9,\r\n    address: \"\",\r\n    draggable: true,\r\n    lat: null,\r\n    lng: null\r\n}\r\n\r\nexport const API_KEY=\"AIzaSyDre9x4CTbdRH3Q6UYUH_aqtO4s-qWrtlo\";","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport SearchBar from './SearchBar';\r\nimport Marker from './Marker';\r\nimport MarkDisplayer from './MarkDisplayer';\r\nimport { storeMarker } from '../actions/map';\r\nimport store from '../store';\r\nimport { stateModel, API_KEY } from './../models/data.models';\r\n\r\nfunction MapCanvas() {\r\n    const [state, setState] = useState({ stateModel });\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [marker, setMarker] = useState(false)\r\n    const [footerData, setFooterData] = useState({ lat: \"\", lng: \"\", name: \"\", address: \"\" })\r\n    const [storeArr, setStoreArr] = useState({ arr: [{ lat: \"\", lng: \"\", places: \"\" }] })\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setCurrentLocation();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (trigger) {\r\n            generateAddress()\r\n            setTrigger(false)\r\n        }\r\n    }, [trigger])\r\n\r\n    useEffect(() => {\r\n        if (marker) {\r\n            dispatch(storeMarker(state.stateModel))\r\n            setFooterData({ name: state.stateModel.places[0]?.name, address: state.stateModel.places[0]?.formatted_address })\r\n            setMarker(false)\r\n        }\r\n        setStoreArr(() => store.getState())\r\n    }, [marker]);\r\n\r\n    const { places, mapApiLoaded, mapInstance, mapApi } = state.stateModel;\r\n\r\n    const onChange = ({ center, zoom }) => {\r\n        setState(prevState => ({\r\n            stateModel: {\r\n                ...prevState.stateModel,\r\n                center: center,\r\n                zoom: zoom,\r\n            }\r\n        }))\r\n    }\r\n\r\n    const apiHasLoaded = (map, maps) => {\r\n        setState(prevState => ({\r\n            stateModel: {\r\n                ...prevState.stateModel,\r\n                mapApiLoaded: true,\r\n                mapInstance: map,\r\n                mapApi: maps,\r\n            }\r\n        }));\r\n        setTrigger(true)\r\n    };\r\n\r\n    const addPlace = (place) => {\r\n        setState(prevState => ({\r\n            stateModel: {\r\n                ...prevState.stateModel,\r\n                places: [place],\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng(),\r\n            }\r\n        }))\r\n        setTrigger(true)\r\n        setMarker(true)\r\n    };\r\n\r\n    function generateAddress() {\r\n        const { mapApi } = state.stateModel;\r\n\r\n        const geocoder = new mapApi.Geocoder();\r\n\r\n        geocoder.geocode({ 'location': { lat: state.stateModel.lat, lng: state.stateModel.lng } }, (results, status) => {\r\n            if (status === 'OK') {\r\n                if (results[0]) {\r\n                    setState(prevState => ({\r\n                        stateModel: {\r\n                            ...prevState.stateModel,\r\n                            address: results[0].formatted_address,\r\n                            zoom: 12\r\n                        }\r\n                    }))\r\n                } else {\r\n                    window.alert('No results found');\r\n                }\r\n            } else {\r\n                window.alert('Geocoder failed due to: ' + status);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    // Empezamos localizando el naveador del usuario\r\n    function setCurrentLocation() {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                setState(prevState => ({\r\n                    stateModel: {\r\n                        ...prevState.stateModel,\r\n                        center: [position.coords.latitude, position.coords.longitude],\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    }\r\n                }))\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"canvasMap\">\r\n            {mapApiLoaded && (\r\n                <div>\r\n                    <SearchBar map={mapInstance} mapApi={mapApi} addplace={addPlace} />\r\n                </div>\r\n            )}\r\n            <GoogleMapReact\r\n                center={state.stateModel.center}\r\n                defaultCenter={{ lat: 0, lng: 0 }}\r\n                zoom={state.stateModel.zoom}\r\n                draggable={state.stateModel.draggable}\r\n                onChange={() => onChange}\r\n                bootstrapURLKeys={{\r\n                    key: API_KEY,\r\n                    libraries: ['places','geometry'],\r\n                }}\r\n                yesIWantToUseGoogleMapApiInternals\r\n                onGoogleApiLoaded={({ map, maps }) => apiHasLoaded(map, maps)}\r\n            >\r\n                {storeArr.arr.length > 1 ? storeArr.arr.map((mark, index) =>\r\n                (<Marker\r\n                    key={index}\r\n                    lat={mark.lat}\r\n                    lng={mark.lng}\r\n                    onClick={() => setFooterData({ name: mark.places[0]?.name, address: mark.places[0]?.formatted_address }) } />\r\n                )\r\n                ) :\r\n                    <Marker\r\n                        lat={state.stateModel.lat}\r\n                        lng={state.stateModel.lng}\r\n                    />\r\n                }\r\n            </GoogleMapReact>\r\n            <MarkDisplayer name={footerData.name} address={footerData.address} />\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nexport default MapCanvas;","import { STORE_MARKER } from './types';\r\n\r\nexport const storeMarker = (marker) => (dispatch) => {\r\n    dispatch({\r\n        type: STORE_MARKER,\r\n        payload: marker,\r\n    });\r\n\r\n    return Promise.resolve();\r\n};\r\n","import './App.css';\r\nimport MapCanvas from './components/MapCanvas';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-wrapper\">\r\n      <MapCanvas/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}